name: sim-release
on:
  workflow_dispatch:
    inputs:
      v-tag:
        description: 'Version tag vM.m.p'
        type: string
        default: 'v0.1.3'
        required: true
      pub-npm:
        description: 'Publish to NPM'
        type: boolean
        default: false
      pub-dh:
        description: 'Publish to Docker Hub'
        type: boolean
        default: false
  #push:
  #  tags:
  #    - 'v[0-9]+.[0-9]+.[0-9]+*'
jobs:
  run-tests:
    uses: ./.github/workflows/sim-testing.yml
    with:
      save-release-artifacts: true
  release:
    needs: run-tests
    environment: publish
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
      # Download artifacts from testing job
      - name: Obtain artifacts from testing job
        uses: actions/download-artifact@v3
        with:
          name: sim-artifact
      # Check download
      - name: Check downloaded artifact
        run: |
          ls -l repo
          ls -l repo/a/b
          cat repo/a/b/built_file.js
          ls -l other
          ls -l contexts
      # -------------------------------------
      # Version number
      # Number from tag
      - name: get version number from tag
        id: get-vers-from-tag
        #run: echo "${{github.ref_name}}" | sed 's/v/version=/' >> $GITHUB_OUTPUT
        run: echo "${{inputs.v-tag}}" | sed 's/v/version=/' >> $GITHUB_OUTPUT
      # Number from file
      - name: check version from package.json
        id: get-vers-from-file
        working-directory: repo/js
        run: |
          echo "version=`grep version package.json | sed -e 's/  "version": "//' | sed -e 's/",//'`" >> $GITHUB_OUTPUT
      # Verify the two numbers are the same
      - name: Check version number
        run: |
          echo "Tag version: ${{steps.get-vers-from-tag.outputs.version}}"
          echo "File version: ${{steps.get-vers-from-file.outputs.version}}"
          test "${{steps.get-vers-from-tag.outputs.version}}" = "${{steps.get-vers-from-file.outputs.version}}"
      # Determine secondary docker image tag
      - name: Determine secondary docker image tag
        id: second-tag
        run: |
          echo "${{steps.get-vers-from-tag.outputs.version}}" | sed -e "s/.*-.*/secondTag=edge/" | sed -e "s/[0-9].*/secondTag=latest/" >> $GITHUB_OUTPUT
      - name: Check second tag
        run: |
          echo "Second tag: ${{steps.second-tag.outputs.secondTag}}"
      # -------------------------------------
      # Publishing
      # Manually control whether we're doing the publishing steps or not
      #- name: Switch publishing on or off
      #  id: switch
      #  run: |
      #    echo "pub-npm=no" >> $GITHUB_OUTPUT
      #    echo "pub-dh=no" >> $GITHUB_OUTPUT
      # -------------------------------------
      # npm
      # Check that certain files will be included
      - name: Check npm publish dry-run
        working-directory: repo/js
        env:
          NPDR: ../../npdr.txt
        run: |
          npm publish --dry-run 2>&1 | cat > $NPDR
          cat $NPDR | grep LICENSE
          cat $NPDR | grep NOTICE
      # Set up npm
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      # npm publish
      - if: ${{inputs.pub-npm}}
        name: Do npm publish
        working-directory: repo/js
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_01 }}
        run: npm publish
      # -------------------------------------
      # Docker Hub
      - name: Extract Docker context
        run: |
          mkdir build_context_dir
          tar -x -f contexts/context.tar.gz -C build_context_dir
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - if: ${{inputs.pub-dh}}
        name: Build multiplatform and publish to Docker Hub
        uses: docker/build-push-action@v4
        with:
          context: build_context_dir
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            skieffer/wflow01:${{steps.get-vers-from-tag.outputs.version}}
            skieffer/wflow01:${{steps.second-tag.outputs.secondTag}}
